#
# ALoLStats example configuration
#

[API]
    Ip = "127.0.0.1" # IP to listen on for the REST API
    Port = "8000" # Port to listen on for the REST API

[RiotClient]
    [RiotClient.euw1]
        Key = "RGAPI-xxxxxxxxxxxxxxx" # Here goes your api key
        APIVersion = "v4" # API version to use (only v4 allowed)
        Region = "euw1" # Game region to use ("euw1", "eun1", ...)

    [RiotClient.eun1]
        Key = "RGAPI-xxxxxxxxxxxxxxx" # Here goes your api key
        APIVersion = "v4" # API version to use (only v4 allowed)
        Region = "eun1" # Game region to use ("euw1", "eun1", ...)

[LoLStorage] # LoLStorage holds the settings specific for the storage component
	UseMatchFiles = true # Specifies if Riot provided Match Files should be read
	MatchFIleDIr = "/tmp" # Specifies the directory holding the match files
	MaxAgeChampion = 120 # Specified the maximum age for champion data in minutes until it's invalidated. 0 means it is always fetched newly.
    MaxAgeChampionRotation = 120 # Specified the maximum age for free champion rotation data in minutes until it's invalidated. 0 means it is always fetched newly.
	MaxAgeSummoner = 120 # Specified the maximum age for summoner data in minutes until it's invalidated. 0 means it is always fetched newly.
    MaxAgeSummonerSpells = 120 # Specified the maximum age for summoner spells data in minutes until it's invalidated. 0 means it is always fetched newly.
    MaxAgeItems = 120 # Specified the maximum age for items data in minutes until it's invalidated. 0 means it is always fetched newly.
    DefaultRiotClient = "euw1" # Specifies a default RiotClient for use if not otherwise specified in requests or function calls

[StorageBackend]
	Backend = "mongo" # Name of the storage backend to use (e.g., mongo)

    [StorageBackend.MongoBackend] # MongoBackend specific settings
        URL = "mongodb://user1:test@localhost/testdb" # URL to connect to
        Database = "testdb" # Database to use

[FetchRunner]
    [FetchRunner.euw1]
        Region = "euw1" # Specified the RiotAPI region to use (must exist as RiotAPI defined above)
        UpdateIntervalSummonerMatches = 60 # Specified the update interval for fetching Summoner Matches in minutes > 0
        UpdateIntervalFreeRotation = 220 # Specified the update interval for fetching Free Rotation in minutes > 0 (disabled if = 0)

        FetchMatchesForSummoners = ["summoner1", "summoner2"] # Specifies Summoner names for which matches shall be fetched
        FetchMatchesForSummonersNumber = 100 # How many of the last matches shall be checked/pulled per account. 0 means all of them

        FetchMatchesForLeagues = ["masterleagues", "grandmasterleagues", "challengerleagues"] # Specified for which leagues matches shall be fetched. Currently implemented by Riot are "masterleagues", "grandmasterleagues", "challengerleagues"
        FetchMatchesForLeagueQueues = ["RANKED_SOLO_5x5", "RANKED_FLEX_SR", "RANKED_FLEX_TT"] # Specified for queues matches shall be fetched. Allowed are "RANKED_SOLO_5x5", "RANKED_FLEX_SR", "RANKED_FLEX_TT"
        FetchMatchesForLeaguesNumber = 100 # How many of the last matches shall be checked/pulled per account. 0 means all of them

        FetchMatchesForSeenSummoners = true # Specifies if for Summoners encountered in fetched matches an additional fetch run shall be performed (warning, can take a while)

        FetchOnlyLatestGameVersion = true # If true stops fetching matches for a summoner if it encounters a game version != latest known game version
        LatestGameVersionForFetching = "9.5.1" # Specify what the latest game version for fetching is, see config parameter below for details

        FetchTimeLines =  true # FetchTimeLines specifies if also timelines for the matches should be fetched

    [FetchRunner.eun1]
        Region = "eun1" # Specified the RiotAPI region to use (must exist as RiotAPI defined above)
        UpdateIntervalSummonerMatches = 60 # Specified the update interval for fetching Summoner Matches in minutes > 0
        UpdateIntervalFreeRotation = 0 # Specified the update interval for fetching Free Rotation in minutes > 0 (disabled if = 0)

        FetchMatchesForSummoners = ["summoner1", "summoner2"] # Specifies Summoner names for which matches shall be fetched
        FetchMatchesForSummonersNumber = 100 # How many of the last matches shall be checked/pulled per account. 0 means all of them

        FetchMatchesForLeagues = ["masterleagues", "grandmasterleagues", "challengerleagues"] # Specified for which leagues matches shall be fetched. Currently implemented by Riot are "masterleagues", "grandmasterleagues", "challengerleagues"
        FetchMatchesForLeagueQueues = ["RANKED_SOLO_5x5", "RANKED_FLEX_SR", "RANKED_FLEX_TT"] # Specified for queues matches shall be fetched. Allowed are "RANKED_SOLO_5x5", "RANKED_FLEX_SR", "RANKED_FLEX_TT"
        FetchMatchesForLeaguesNumber = 100 # How many of the last matches shall be checked/pulled per account. 0 means all of them

        FetchMatchesForSeenSummoners = true # Specifies if for Summoners encountered in fetched matches an additional fetch run shall be performed (warning, can take a while)

        FetchOnlyLatestGameVersion = false # If true stops fetching matches for a summoner if it encounters a game version != latest known game version

[StatsRunner]
	RunRScripts = true # Specifies if R scripts shall be used (needs a running R installation)
	RScriptPath = "./R" # Path to the R scripts (distributed with alolstats)
	RPlotsOutputPath = "/tmp" # Path where the generated plots shall be stored
	RScriptsUpdateInterval = 2160 # Update Interval for running the R scripts in minutes > 0
    GameVersion = ["9.1.1","8.24.1","8.23.1","8.22.1","8.21.1","8.20.1",
                "8.19.1","8.18.2","8.18.1","8.17.1","8.16.1","8.15.1",
                "8.14.1","8.13.1","8.12.1","8.11.1","8.10.1","8.9.1",
                "8.8.2","8.8.1","8.7.1","8.6.1","8.5.2","8.5.1","8.4.1",
                "8.3.1","8.2.1","8.1.1"] # We want to do stats calculations for the following versions, must be valid game versions, ordered decending, e.g. 9.5, 9.4, ..., see https://ddragon.leagueoflegends.com/api/versions.json
    
    [StatsRunner.ChampionsStats]
        Enabled = true    # Specifies if the ChampionStats calculation shall be activated
        UpdateInverval = 2160  # Update Interval for running the SummonerSpellsStats calculations in minutes > 0
        RoleThreshold  = 30.0 # Percent value over which a role is considered relevant for the Champion

    [StatsRunner.ItemsStats]
        Enabled = true    # Specifies if the ItemsStats calculation shall be activated
        UpdateInverval = 2160  # Update Interval for running the ItemsStats calculations in minutes > 0
        KeepOnlyHighestPickRate = true # Store only the SummonerSpells combination per role/total with the highest pick rate
        KeepOnlyNHighest = 3 # How many of the highest pick rates should be kept

    [StatsRunner.SummonerSpellsStats]
        Enabled = true # Specified if the SummonerSpellsStats runner shall be activated
        UpdateInverval = 2160 # Update Interval for running the SummonerSpellsStats calculations in minutes > 0
        KeepOnlyHighestPickRate = true # Store only the SummonerSpells combination per role/total with the highest pick rate

    [StatsRunner.RunesReforgedStats]
        Enabled = true # Specified if the RunesReforgedStats runner shall be activated
        UpdateInverval = 2160 # Update Interval for running the RunesReforgedStats calculations in minutes > 0
        KeepOnlyHighestPickRate = true # Store only the Runes Reforged combination per role/total with the highest pick rate
        KeepOnlyNHighest = 5 # How many of the highest pick rates should be kept
